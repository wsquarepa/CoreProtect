name: Build Release

on:
  repository_dispatch:
    types: [build-prerelease]
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # ==========
      - name: "[PRE] Set Date & Time Variable"
        id: datetime
        run: echo "datetime=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      # ==========
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build
        run: mvn -B package -Dproject.branch="-edge"

      # ==========
      - name: Extract Version
        id: extract_version
        run: |
          JAR_FILE=$(ls target/CoreProtect-*.jar | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "No matching jar file found." >&2
            exit 1
          fi

          VERSION=$(basename "$JAR_FILE" | sed -E 's/CoreProtect-([0-9]+\.[0-9]+(\.[0-9]+)?).jar/\1/')
          echo "Extracted version: $VERSION"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Rename output JAR
        run: mv target/CoreProtect-*.jar target/CoreProtect-Nightly.jar
      - name: Upload Pre-Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: coreprotect
          name: "Nightly Build"
          body: |-
            CoreProtect nightly build on ${{ steps.datetime.outputs.datetime }}.
            Plugin file is `CoreProtect-Nightly.jar`.

            CURRENT VERSION: `${{ steps.extract_version.outputs.version }}`

            This release will only have the latest nightly build. There will not be any intermediate builds saved.
            It was made this way for ease of update, assuming you have a script that auto-pulls the latest version down.

            Thank you for using my repository for latest CoreProtect builds! 
            Make sure you support the CoreProtect author PlayPro on their [Patreon](https://www.patreon.com/coreprotect) :)
          prerelease: true
          files: "target/CoreProtect-Nightly.jar"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}